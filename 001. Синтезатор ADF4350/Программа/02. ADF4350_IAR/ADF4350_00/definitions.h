/*==========================================================================================================*/
/*                                     Аппаратные особенности ATmega1280                                    */
/*==========================================================================================================*/
#ifndef _definitions_h_
#define _definitions_h_

#include <ioavr.h>       // описание микроконтроллеров AVR 
#include <intrinsics.h>  // встроенные функции (разрешение и запрещение прерываний)

// определения выводов порта A
#define IN1_01 PORTA0 // выход на разъём XP1 PLS1.27 через буфер по питанию +5V/+5V D2 74ACT16244DL OUT (0)
#define IN1_02 PORTA1 // выход на разъём XP1 PLS1.27 через буфер по питанию +5V/+5V D2 74ACT16244DL OUT (0)
#define IN1_03 PORTA2 // выход на разъём XP1 PLS1.27 через буфер по питанию +5V/+5V D2 74ACT16244DL OUT (0)
#define IN1_04 PORTA3 // выход на разъём XP1 PLS1.27 через буфер по питанию +5V/+5V D2 74ACT16244DL OUT (0)
#define IN1_05 PORTA4 // выход на разъём XP1 PLS1.27 через буфер по питанию +5V/+5V D2 74ACT16244DL OUT (0)
#define IN1_06 PORTA5 // выход на разъём XP1 PLS1.27 через буфер по питанию +5V/+5V D2 74ACT16244DL OUT (0)
#define IN1_07 PORTA6 // выход на разъём XP1 PLS1.27 через буфер по питанию +5V/+5V D2 74ACT16244DL OUT (0)
#define IN1_08 PORTA7 // выход на разъём XP1 PLS1.27 через буфер по питанию +5V/+5V D2 74ACT16244DL OUT (0)

// определения выводов порта B
#define IN_SS0  PORTB0 // выход управления включением 1-го ведомого SPI                                    OUT (0)
#define IN_SCK  PORTB1 // выход синхросигнала SPI                                                          OUT (0)
#define IN_MOSI PORTB2 // выход ведущего SPI                                                               OUT (0)
#define IN_MISO PINB3  // вход ведущего SPI                                                                IN  (v)
#define IN_SS1  PORTB4 // выход управления включением 2-го ведомого SPI                                    OUT (0)
#define IN_SS2  PORTB5 // выход управления включением 3-го ведомого SPI                                    OUT (0)
#define IN_LE   PORTB6 // выход разрешения защёлки в последовательном режиме (Latch Enable in Serial Mode) OUT (0)
#define DEBUG   PINB7  // вход отладки                                                                     IN  (v)

// определения выводов порта C
#define IN1_09 PORTC0 // выход на разъём XP1 PLS1.27 через буфер по питанию +5V/+5V D2 74ACT16244DL OUT (0)
#define IN1_10 PORTC1 // выход на разъём XP1 PLS1.27 через буфер по питанию +5V/+5V D2 74ACT16244DL OUT (0)
#define IN1_11 PORTC2 // выход на разъём XP1 PLS1.27 через буфер по питанию +5V/+5V D2 74ACT16244DL OUT (0)
#define IN1_12 PORTC3 // выход на разъём XP1 PLS1.27 через буфер по питанию +5V/+5V D2 74ACT16244DL OUT (0)
#define IN1_13 PORTC4 // выход на разъём XP1 PLS1.27 через буфер по питанию +5V/+5V D2 74ACT16244DL OUT (0)
#define IN1_14 PORTC5 // выход на разъём XP1 PLS1.27 через буфер по питанию +5V/+5V D2 74ACT16244DL OUT (0)
#define IN1_15 PORTC6 // выход на разъём XP1 PLS1.27 через буфер по питанию +5V/+5V D2 74ACT16244DL OUT (0)
#define IN1_16 PORTC7 // выход на разъём XP1 PLS1.27 через буфер по питанию +5V/+5V D2 74ACT16244DL OUT (0)

// определения выводов порта D
#define IN2_01 PORTD0 // выход на разъём XP3 PLS1.27 через буфер по питанию +5V/+5V D5 74ACT16244DL OUT (0)
#define IN2_02 PORTD1 // выход на разъём XP3 PLS1.27 через буфер по питанию +5V/+5V D5 74ACT16244DL OUT (0)
#define IN2_03 PORTD2 // выход на разъём XP3 PLS1.27 через буфер по питанию +5V/+5V D5 74ACT16244DL OUT (0)
#define IN2_04 PORTD3 // выход на разъём XP3 PLS1.27 через буфер по питанию +5V/+5V D5 74ACT16244DL OUT (0)
#define IN2_05 PORTD4 // выход на разъём XP3 PLS1.27 через буфер по питанию +5V/+5V D5 74ACT16244DL OUT (0)
#define IN2_06 PORTD5 // выход на разъём XP3 PLS1.27 через буфер по питанию +5V/+5V D5 74ACT16244DL OUT (0)
#define IN2_07 PORTD6 // выход на разъём XP3 PLS1.27 через буфер по питанию +5V/+5V D5 74ACT16244DL OUT (0)
#define IN2_08 PORTD7 // выход на разъём XP3 PLS1.27 через буфер по питанию +5V/+5V D5 74ACT16244DL OUT (0)

// определения выводов порта E
#define RX        PINE0  // вывод приема данных через COM-порт                                         IN  (^)
#define TX        PORTE1 // вывод передачи данных через COM-порт                                       OUT (1)
#define ADLIN1_D0 PORTE2 // выход на разъём XP4 PLS1.27 через буфер по питанию +5V/+5V D7 74ACT16244DL OUT (0)
#define ADLIN1_D1 PORTE3 // выход на разъём XP4 PLS1.27 через буфер по питанию +5V/+5V D7 74ACT16244DL OUT (0)
#define ADLIN1_D2 PORTE4 // выход на разъём XP4 PLS1.27 через буфер по питанию +5V/+5V D7 74ACT16244DL OUT (0)
#define ADLIN1_D3 PORTE5 // выход на разъём XP4 PLS1.27 через буфер по питанию +5V/+5V D7 74ACT16244DL OUT (0)
#define ADLIN1_D4 PORTE6 // выход на разъём XP4 PLS1.27 через буфер по питанию +5V/+5V D7 74ACT16244DL OUT (0)
#define ADLIN1_D5 PORTE7 // выход на разъём XP4 PLS1.27 через буфер по питанию +5V/+5V D7 74ACT16244DL OUT (0)

// определения выводов порта F
#define ADLIN1_D6 PORTF0 // выход на разъём XP4 PLS1.27 через буфер по питанию +5V/+5V D7 74ACT16244DL OUT (0)
#define ADLIN2_D0 PORTF1 // выход на разъём XP4 PLS1.27 через буфер по питанию +5V/+5V D7 74ACT16244DL OUT (0)
#define ADLIN2_D1 PORTF2 // выход на разъём XP4 PLS1.27 через буфер по питанию +5V/+5V D7 74ACT16244DL OUT (0)
#define ADLIN2_D2 PORTF3 // выход на разъём XP4 PLS1.27 через буфер по питанию +5V/+5V D7 74ACT16244DL OUT (0)
#define ADLIN2_D3 PORTF4 // выход на разъём XP4 PLS1.27 через буфер по питанию +5V/+5V D7 74ACT16244DL OUT (0)
#define ADLIN2_D4 PORTF5 // выход на разъём XP4 PLS1.27 через буфер по питанию +5V/+5V D7 74ACT16244DL OUT (0)
#define ADLIN2_D5 PORTF6 // выход на разъём XP4 PLS1.27 через буфер по питанию +5V/+5V D7 74ACT16244DL OUT (0)
#define ADLIN2_D6 PORTF7 // выход на разъём XP4 PLS1.27 через буфер по питанию +5V/+5V D7 74ACT16244DL OUT (0)

// определения выводов порта G
#define IN4_09 PORTG0 // выход на разъём XP7 PLS1.27 через буфер по питанию +5V/+3.3V D1 SN74ALVC164245DL OUT (0)
#define IN4_10 PORTG1 // выход на разъём XP7 PLS1.27 через буфер по питанию +5V/+3.3V D1 SN74ALVC164245DL OUT (0)
#define IN4_11 PORTG2 // выход на разъём XP7 PLS1.27 через буфер по питанию +5V/+3.3V D1 SN74ALVC164245DL OUT (0)
#define IN4_12 PORTG3 // выход на разъём XP7 PLS1.27 через буфер по питанию +5V/+3.3V D1 SN74ALVC164245DL OUT (0)
#define IN4_13 PORTG4 // выход на разъём XP7 PLS1.27 через буфер по питанию +5V/+3.3V D1 SN74ALVC164245DL OUT (0)
#define LED    PORTG5 // вывод управления сетодиодным индикатором                                         OUT (1)

// определения выводов порта H
#define IN2_09 PORTH0 // выход на разъём XP3 PLS1.27 через буфер по питанию +5V/+5V D5 74ACT16244DL OUT (0)
#define IN2_10 PORTH1 // выход на разъём XP3 PLS1.27 через буфер по питанию +5V/+5V D5 74ACT16244DL OUT (0)
#define IN2_11 PORTH2 // выход на разъём XP3 PLS1.27 через буфер по питанию +5V/+5V D5 74ACT16244DL OUT (0)
#define IN2_12 PORTH3 // выход на разъём XP3 PLS1.27 через буфер по питанию +5V/+5V D5 74ACT16244DL OUT (0)
#define IN2_13 PORTH4 // выход на разъём XP3 PLS1.27 через буфер по питанию +5V/+5V D5 74ACT16244DL OUT (0)
#define IN2_14 PORTH5 // выход на разъём XP3 PLS1.27 через буфер по питанию +5V/+5V D5 74ACT16244DL OUT (0)
#define IN2_15 PORTH6 // выход на разъём XP3 PLS1.27 через буфер по питанию +5V/+5V D5 74ACT16244DL OUT (0)
#define IN2_16 PORTH7 // выход на разъём XP3 PLS1.27 через буфер по питанию +5V/+5V D5 74ACT16244DL OUT (0)

// определения выводов порта J
#define IN3_01 PORTJ0 // выход на разъём XP5 PLS1.27 через буфер по питанию +5V/+3.3V D4 SN74ALVC164245DL OUT (0)
#define IN3_02 PORTJ1 // выход на разъём XP5 PLS1.27 через буфер по питанию +5V/+3.3V D4 SN74ALVC164245DL OUT (0)
#define IN3_03 PORTJ2 // выход на разъём XP5 PLS1.27 через буфер по питанию +5V/+3.3V D4 SN74ALVC164245DL OUT (0)
#define IN3_04 PORTJ3 // выход на разъём XP5 PLS1.27 через буфер по питанию +5V/+3.3V D4 SN74ALVC164245DL OUT (0)
#define IN3_05 PORTJ4 // выход на разъём XP5 PLS1.27 через буфер по питанию +5V/+3.3V D4 SN74ALVC164245DL OUT (0)
#define IN3_06 PORTJ5 // выход на разъём XP5 PLS1.27 через буфер по питанию +5V/+3.3V D4 SN74ALVC164245DL OUT (0)
#define IN3_07 PORTJ6 // выход на разъём XP5 PLS1.27 через буфер по питанию +5V/+3.3V D4 SN74ALVC164245DL OUT (0)

// определения выводов порта K
#define IN3_08 PORTK0 // выход на разъём XP5 PLS1.27 через буфер по питанию +5V/+3.3V D4 SN74ALVC164245DL OUT (0)
#define IN3_09 PORTK1 // выход на разъём XP5 PLS1.27 через буфер по питанию +5V/+3.3V D4 SN74ALVC164245DL OUT (0)
#define IN3_10 PORTK2 // выход на разъём XP5 PLS1.27 через буфер по питанию +5V/+3.3V D4 SN74ALVC164245DL OUT (0)
#define IN3_11 PORTK3 // выход на разъём XP5 PLS1.27 через буфер по питанию +5V/+3.3V D4 SN74ALVC164245DL OUT (0)
#define IN3_12 PORTK4 // выход на разъём XP5 PLS1.27 через буфер по питанию +5V/+3.3V D4 SN74ALVC164245DL OUT (0)
#define IN3_13 PORTK5 // выход на разъём XP5 PLS1.27 через буфер по питанию +5V/+3.3V D4 SN74ALVC164245DL OUT (0)
#define IN3_14 PORTK6 // выход на разъём XP5 PLS1.27 через буфер по питанию +5V/+3.3V D4 SN74ALVC164245DL OUT (0)

// определения выводов порта L
#define IN4_01 PORTL0 // выход на разъём XP7 PLS1.27 через буфер по питанию +5V/+3.3V D1 SN74ALVC164245DL OUT (0)
#define IN4_02 PORTL1 // выход на разъём XP7 PLS1.27 через буфер по питанию +5V/+3.3V D1 SN74ALVC164245DL OUT (0)
#define IN4_03 PORTL2 // выход на разъём XP7 PLS1.27 через буфер по питанию +5V/+3.3V D1 SN74ALVC164245DL OUT (0)
#define IN4_04 PORTL3 // выход на разъём XP7 PLS1.27 через буфер по питанию +5V/+3.3V D1 SN74ALVC164245DL OUT (0)
#define IN4_05 PORTL4 // выход на разъём XP7 PLS1.27 через буфер по питанию +5V/+3.3V D1 SN74ALVC164245DL OUT (0)
#define IN4_06 PORTL5 // выход на разъём XP7 PLS1.27 через буфер по питанию +5V/+3.3V D1 SN74ALVC164245DL OUT (0)
#define IN4_07 PORTL6 // выход на разъём XP7 PLS1.27 через буфер по питанию +5V/+3.3V D1 SN74ALVC164245DL OUT (0)
#define IN4_08 PORTL7 // выход на разъём XP7 PLS1.27 через буфер по питанию +5V/+3.3V D1 SN74ALVC164245DL OUT (0)
/*
Обозначения:
- IN  (^) - вывод входа(чтение), ^ - резистивная подтяжка на питание;
- IN  (v) - вывод входа(чтение), v - резистивная подтяжка на землю;
- OUT (0) - вывод выхода(запись) начальное состояние 0, активное состояние 1;
- OUT (1) - вывод выхода(запись) начальное состояние 1, активное состояние 0;
Начальное и активное состояние выводов IN и OUT определяется по принцип. схеме.

Пометки:
Регистры портов в/в. Разряд DDxn регистра DDx определяет направление передачи данных через контакт ввода/вывода. Если этот разряд 
установлен в «1», то n-й вывод порта является выходом, если же сброшен в «0» — входом. Разряд PORTxn регистра 
PORTx выполняет двойную функцию. Если вывод функционирует как выход (DDxn = «1»), этот разряд определяет 
состояние вывода порта. Если разряд установлен в «1», на выводе устанавливается напряжение ВЫСОКОГО уровня. 
Если разряд сброшен в «0», на выводе устанавливается напряжение НИЗКОГО уровня. Если же вывод функционирует как 
вход (DDxn = «0»), разряд PORTxn определяет состояние внутреннего подтягивающего резистора для данного вывода. 
При установке разряда PORTxn в «1» подтягивающий резистор подключается между выводом микроконтроллера и проводом 
питания. Состояние вывода микроконтроллера (независимо от установок разряда DDxn) может быть получено путем 
чтения разряда PINxn регистра PINx.
*/
/*==========================================================================================================*/
/*                                         Описание типов данных                                            */
/*==========================================================================================================*/
union u_int                                // для 2-х байтовых данных без знака
  {
    unsigned int  du_i;                    // data_union_int
    unsigned char du_c[2];                 // data_union_char
  };                                       // 256*[0] + [1]

union u_sint                               // для 2-х байтовых данных со знаком
  {
    signed int  du_si;                     // data_union_int
    signed char du_sc[2];                  // data_union_char
  };    

union u_lng                                // для 4-х байтовых данных
  {
   unsigned long du_l;                     // data_union_long
   unsigned char du_c[4];                  // data_union_char
  };
#endif